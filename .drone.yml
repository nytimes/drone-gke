---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/nytimes/drone-gke

go_config: &go_config
  image: golang:1
  pull: if-not-exists
  environment:
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org
    CGO_ENABLED: 0

slack_config: &slack_config
  image: plugins/slack
  pull: if-not-exists
  settings:
    channel: dv-cdp-alerts
  environment:
    SLACK_WEBHOOK:
      from_secret: slack_webhook

steps:
- <<: *go_config
  name: test
  commands:
  - go mod download
  - go test -cover -vet all

- <<: *go_config
  name: build
  commands:
  - go build -a -ldflags "-X main.version=n/a -X main.rev=${DRONE_COMMIT}"
  when:
    branch:
    - main

- <<: *go_config
  name: build_release
  commands:
  - go build -a -ldflags "-X main.version=${DRONE_TAG} -X main.rev=${DRONE_COMMIT}"
  when:
    event:
    - tag

- name: docker_build_test
  image: plugins/docker
  pull: if-not-exists
  settings:
    dry_run: true
    dockerfile: Dockerfile
    repo: nytimes/drone-gke
  when:
    event:
    - pull_request

- name: publish_release
  image: plugins/docker
  pull: if-not-exists
  settings:
    auto_tag: true
    dockerfile: Dockerfile
    repo: nytimes/drone-gke
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username

- <<: *slack_config
  name: slack
  when:
    branch:
    - main

- <<: *slack_config
  name: slack_tag
  when:
    event:
    - tag

...
